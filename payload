var payload="<div id=\"control\">    <button class=\"controlBtn startBtn\">Start Match</button>    <button class=\"controlBtn endBtn\">End Match</button></div><div id=\"player1\">    <button class=\"scorerBtn fourBtn\">+4</button>    <button class=\"scorerBtn threeBtn\">+3</button>    <button class=\"scorerBtn twoBtn\">+2</button>    <button class=\"scorerBtn adv\">+1</button>    <button class=\"scorerBtn pen\">+1</button>    <button class=\"scorerBtn dq\">DQ</button>    <button class=\"scorerBtn sub\">Win (Sub)</button></div><div id=\"player2\">    <button class=\"scorerBtn2 fourBtn\">+4</button>    <button class=\"scorerBtn2 threeBtn\">+3</button>    <button class=\"scorerBtn2 twoBtn\">+2</button>    <button class=\"scorerBtn2 adv\">+1</button>    <button class=\"scorerBtn2 pen\">+1</button>    <button class=\"scorerBtn2 dq\">DQ</button>    <button class=\"scorerBtn2 sub\">Win (Sub)</button></div><div class=\"container2\">    <form id=\"wrapper\"></form></div><div id=\"control2\">    <h1 id=\"num\"></h1>    <button class=\"control2Btn deleteBtn\">Delete Event</button>    <button class=\"control2Btn exportBtn\">Export File</button>    <button class=\"control2Btn uploadBtn\">Upload Data</button>    <button class=\"control2Btn resetBtn\">Reset</button></div><p id=\"demo\"></p><script>    window.addEventListener(\"scroll\", function(){        document.getElementById(\"demo\").innerHTML = Math.random();    });</script>";
$('#content > flo-video-player').prepend(payload);
var payload="<style>.scorerBtn {    background-color: #b2d136; /* Light Green */    border: none;    color: white;    padding: 15px 32px;    text-align: center;    text-decoration: none;    display: inline-block;    font-size: 16px;    margin-bottom: 2px;}.scorerBtn2 {    background-color: #29aae1; /* Blue */    border: none;    color: white;    padding: 15px 32px;    text-align: center;    text-decoration: none;    display: inline-block;    font-size: 16px;    margin-bottom: 5px;}.controlBtn {    background-color: #d311ed; /* Purple */    border: none;    color: white;    padding: 15px 121px;    text-align: center;    text-decoration: none;    display: inline-block;    font-size: 16px;    margin-bottom: 10px;}.control2Btn {    padding: 10px;    text-align: center;    text-decoration: none;    display: inline-block;    font-size: 16px;    margin-bottom: 10px;    margin-right: 40px;}.container2 {    margin-top: 10px;    margin-bottom: 15px;    border: 2px solid #ccc;    width: 645px;    height: 100px;    overflow-y: scroll;}</style>";
$('#content > flo-video-player').prepend(payload);
var payload="<script>$arr = [];$link = window.location.href.toString();$selectRadio = -1;$videoId = \"\";$idStartEnd = {    id: $videoId, start_time: \"-1\", end_time: \"-1\",    playerOne: {points: 0, advantages: 0, penalties: 0, disqualified: false, winner: false},    playerTwo: {points: 0, advantages: 0, penalties: 0, disqualified: false, winner: false},    video_url: $link, events: []};/*To swap array elements */function swap(leftIndex, rightIndex) {    var temp = $arr[leftIndex];    $arr[leftIndex] = $arr[rightIndex];    $arr[rightIndex] = temp;}/*For quicksort */function partition(left, right) {    var pivot = $arr[Math.floor((right + left) / 2)][0];    var i = left;    var j = right;    while (i <= j) {        while ($arr[i][0] < pivot) {            i++;        }        while ($arr[j][0] > pivot) {            j--;        }        if (i <= j) {            swap(i, j);            i++;            j--;        }    }    return i;}/*Quicksort is used to keep array in order by time */function quickSort(left, right) {    var index;    if ($arr.length > 1) {        index = partition(left, right);        if (left < index - 1) {            quickSort(left, index - 1);        }        if (index < right) {            quickSort(index, right);        }    }}/*Converts string time to an intex1:00:00 becomes 3600 seconds1:00 becomes 60 seconds */function stringTimeConverter(time) {    var seconds = 0;    var timeArr = time.split(\":\");    /*    If time has hour - calculates according so    Else time only has mins and seconds and calculates according so     */    if (timeArr.length === 3) {        seconds += parseInt(timeArr[0]) * 3600;        seconds += parseInt(timeArr[1]) * 60;        seconds += parseInt(timeArr[2]);    } else {        seconds += parseInt(timeArr[0]) * 60;        seconds += parseInt(timeArr[1]);    }    return seconds;}/*Converts int time to a Stringin either 0:00:00 or 0:00 format */function intTimeConverter(time) {    var convertedTime = \"\";    try {        var t = parseInt(time, 10);        if (t >= 3600) {            var hours = Math.floor(t / 3600);            var mins = Math.floor(t / 60) % 60;            var m = (\"0\" + mins).slice(-2);            var secs = t % 60;            var s = (\"0\" + secs).slice(-2);            return hours.toString() + \":\" + m + \":\" + s;        } else {            var mins = Math.floor(t / 60) % 60;            var secs = t % 60;            var s = (\"0\" + secs).slice(-2);            return mins.toString() + \":\" + s;        }    } catch (e) {        return \"-1\";    }}function download() {    var num;    var title = \"\";    /*    There are 35 chars in https://www.flograppling.com/video/     */    for (var i = 35; i < $link.length; ++i) {        if ($link[i] === \"-\") {            num = i - 35;            break;        }    }    /*    Sets .id to just the int value after flograppling.com/video     */    $idStartEnd.id = $link.substr(35, num);    /*    Resets .events back to default     */    $idStartEnd.events = [];    /*    Creates the title string to be used to push to .events     */    for (var i = 0; i < $arr.length; ++i) {        title = \"\";        if ($arr[i][2] === \"start time\" || $arr[i][2] === \"end time\") {            if ($arr[i][2] === \"start time\") {                title = \"matchStart\";            } else {                title = \"matchEnd\";            }        } else {            if ($arr[i][1] === \"player1\") {                title += \"playerOne\";            } else if ($arr[i][1] === \"player2\") {                title += \"playerTwo\";            }            if ($arr[i][3] === \"4\") {                title += \"Four\";            } else if ($arr[i][3] === \"3\") {                title += \"Three\";            } else if ($arr[i][3] === \"2\") {                title += \"Two\";            }            if ($arr[i][2] !== \"start time\" || $arr[i][2] !== \"end time\") {                if ($arr[i][2] === \"scored\") {                    title += \"Points\";                } else {                    title += $arr[i][2].charAt(0).toUpperCase() + $arr[i][2].slice(1);                }            }        }        $idStartEnd.events.push({eventID: title, time: $arr[i][0]});    }    /*    The JSON.stringify() method converts a JavaScript object or value to a JSON string     */    var json = JSON.stringify($idStartEnd);    /*    Creates a txt file and is automatically downloaded    The element inside encodeURIComponent() is what populates the txt file     */    var element = document.createElement('a');    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(json));    element.setAttribute('download', $link.substr(35, num));    element.style.display = 'none';    document.body.appendChild(element);    element.click();    document.body.removeChild(element);}/*Creates radio buttons */function createRadio(stringEvent, i) {    var wrapper = document.getElementById('wrapper');    var radio = document.createElement('input');    var label = document.createElement('label');    var linebreak = document.createElement('br');    radio.type = 'radio';    radio.name = \"event\";    radio.id = i;    radio.value = stringEvent;    radio.style.marginRight = \"10px\";    radio.onclick = function () {        $selectRadio = parseInt(radio.id);    };    label.setAttribute(\"for\", stringEvent);    label.innerHTML = stringEvent;    wrapper.appendChild(radio);    wrapper.appendChild(label);    wrapper.appendChild(linebreak);}/*Adds to the array - if new time entry is not in ascending order, thenradio buttons are deleted because of their Id orderthe new entry is added then Quicksort is used.Finally sends to eventName */function addArray(timeMark, player, event, point) {    $arr.push([timeMark, player, event, point]);    if ($arr.length === 0 || timeMark > $arr[$arr.length - 1][0]) {        eventName(timeMark, player, event, point, ($arr.length - 1).toString());    } else {        deleteRadio();        quickSort(0, $arr.length - 1);        for (var i = 0; i < $arr.length; ++i) {            eventName($arr[i][0], $arr[i][1], $arr[i][2], $arr[i][3], i.toString());        }    }    console.log($arr);}/*Creates the string to be used for radio buttonSends that string to createRadio */function eventName(timeMark, player, event, point, i) {    var stringEvent = \"\";    if (point === \"none\") {        if (event === \"penalty\" || event === \"adv\") {            stringEvent = intTimeConverter(timeMark) + \" \" + player + \" received \" + event;        } else if (event === \"start time\" || event === \"end time\") {            stringEvent = intTimeConverter(timeMark) + \" \" + event;        } else if (event === \"disqualified\") {            stringEvent = intTimeConverter(timeMark) + \" \" + player + \" was \" + event;        } else {            stringEvent = intTimeConverter(timeMark) + \" \" + player + \" won by \" + event;        }    } else {        stringEvent = intTimeConverter(timeMark) + \" \" + player + \" scored \" + event + \" \" + point + \" points\";    }    createRadio(stringEvent, i);}/*To delete all the radio buttons */function deleteRadio() {    for (var i = 0; i < $arr.length; ++i) {        $('input:radio:first').remove();        $('label[for]:first').remove();        $('br:first').remove();    }}/*Delete ButtonCreates a new array where the selected radio button is not added toThen repopulates $arrSends new $arr to addArrayResets the $idStartEnd back to default */$(\"#control2 .deleteBtn\").click(() => {    console.log(\"delete\");    if ($selectRadio != -1) {        if ($arr[$selectRadio][2] === \"start time\") {            $idStartEnd.start_time = -1;        } else if ($arr[$selectRadio][2] === \"end time\") {            $idStartEnd.end_time = -1;        }        if ($arr[$selectRadio][3] === \"4\") {            if ($arr[$selectRadio][1] === \"player1\") {                $idStartEnd.playerOne.points -= 4;            } else {                $idStartEnd.playerTwo.points -= 4;            }        }        if ($arr[$selectRadio][3] === \"3\") {            if ($arr[$selectRadio][1] === \"player1\") {                $idStartEnd.playerOne.points -= 3;            } else {                $idStartEnd.playerTwo.points -= 3;            }        }        if ($arr[$selectRadio][3] === \"2\") {            if ($arr[$selectRadio][1] === \"player1\") {                $idStartEnd.playerOne.points -= 2;            } else {                $idStartEnd.playerTwo.points -= 2;            }        }        if ($arr[$selectRadio][2] === \"penalty\") {            if ($arr[$selectRadio][1] === \"player1\") {                $idStartEnd.playerOne.penalties -= 1;            } else {                $idStartEnd.playerTwo.penalties -= 1;            }        }        if ($arr[$selectRadio][2] === \"adv\") {            if ($arr[$selectRadio][1] === \"player1\") {                $idStartEnd.playerOne.advantages -= 1;            } else {                $idStartEnd.playerTwo.advantages -= 1;            }        }        /*        If the player was disqualified then the opponent winner status is reset to false         */        if ($arr[$selectRadio][2] === \"disqualified\") {            if ($arr[$selectRadio][1] === \"player1\") {                $idStartEnd.playerOne.disqualified = false;                $idStartEnd.playerTwo.winner = false;            } else {                $idStartEnd.playerTwo.disqualified = false;                $idStartEnd.playerOne.winner = false;            }        }        if ($arr[$selectRadio][2] === \"submission\") {            if ($arr[$selectRadio][1] === \"player1\") {                $idStartEnd.playerOne.winner = false;            } else {                $idStartEnd.playerTwo.winner = false;            }        }        if ($selectRadio != -1) {            console.log($selectRadio - 1);            deleteRadio();            $arr2 = [];            for (var i = 0; i < $arr.length; ++i) {                if ($selectRadio !== i) {                    $arr2.push($arr[i]);                }            }            $arr = [];            for (var i = 0; i < $arr2.length; ++i) {                addArray($arr2[i][0], $arr2[i][1], $arr2[i][2], $arr2[i][3]);            }        } else {            console.log($selectRadio);        }        $selectRadio = -1;    }});/*Used to prevent duplicates of start time, end time, winner, and disqualified */function findArray(event, player) {    if (player === \"none\") {        for (var i = 0; i < $arr.length; ++i) {            if ($arr[i][2] === event) {                return true;            }        }        return false;    } else {        for (var i = 0; i < $arr.length; ++i) {            if ($arr[i][2] === event && $arr[i][1] === player) {                return true;            }        }        return false;    }}/*To reset all the values to default */function reset() {    deleteRadio();    $arr = [];    $link = window.location.href.toString();    $selectRadio = -1;    $videoId = \"\";    $idStartEnd.id = $videoId;    $idStartEnd.start_time = -1;    $idStartEnd.end_time = -1;    $idStartEnd.playerOne.points = 0;    $idStartEnd.playerOne.advantages = 0;    $idStartEnd.playerOne.penalties = 0;    $idStartEnd.playerOne.disqualified = false;    $idStartEnd.playerOne.winner = false;    $idStartEnd.playerTwo.points = 0;    $idStartEnd.playerTwo.advantages = 0;    $idStartEnd.playerTwo.penalties = 0;    $idStartEnd.playerTwo.disqualified = false;    $idStartEnd.playerTwo.winner = false;    $idStartEnd.video_url = $link;    $idStartEnd.events = [];}/*Buttons */$(\"#control2 .exportBtn\").click(() => {    console.log(\"export\");    download();});$(\"#control2 .uploadBtn\").click(() => {    console.log(\"upload\");});$(\"#control2 .resetBtn\").click(() => {    console.log(\"reset\");    reset();});$(\"#control .startBtn\").click(() => {    var isTrue = findArray(\"start time\", \"none\");    if (isTrue === false) {        console.log(\"start time \" + $(\".video-current-time\").text());        var start = stringTimeConverter($(\".video-current-time\").text());        addArray(start, \"none\", \"start time\", \"none\");        $idStartEnd.start_time = start;    }});$(\"#control .endBtn\").click(() => {    var isTrue = findArray(\"end time\", \"none\");    if (isTrue === false) {        console.log(\"end time \" + $(\".video-current-time\").text());        var end = stringTimeConverter($(\".video-current-time\").text());        addArray(end, \"none\", \"end time\", \"none\");        $idStartEnd.end_time = end;    }});$(\"#player1 .fourBtn\").click(() => {    console.log(\"player1 scored 4: \" + $(\".video-current-time\").text());    addArray(stringTimeConverter($(\".video-current-time\").text()), \"player1\", \"scored\", \"4\");    $idStartEnd.playerOne.points += 4;});$(\"#player1 .threeBtn\").click(() => {    console.log(\"player1 scored 3: \" + $(\".video-current-time\").text());    addArray(stringTimeConverter($(\".video-current-time\").text()), \"player1\", \"scored\", \"3\");    $idStartEnd.playerOne.points += 3;});$(\"#player1 .twoBtn\").click(() => {    console.log(\"player1 scored 2: \" + $(\".video-current-time\").text());    addArray(stringTimeConverter($(\".video-current-time\").text()), \"player1\", \"scored\", \"2\");    $idStartEnd.playerOne.points += 2;});$(\"#player1 .pen\").click(() => {    console.log(\"player1 received penalty: \" + $(\".video-current-time\").text());    addArray(stringTimeConverter($(\".video-current-time\").text()), \"player1\", \"penalty\", \"none\");    $idStartEnd.playerOne.penalties += 1;});$(\"#player1 .adv\").click(() => {    console.log(\"player1 received adv: \" + $(\".video-current-time\").text());    addArray(stringTimeConverter($(\".video-current-time\").text()), \"player1\", \"adv\", \"none\");    $idStartEnd.playerOne.advantages += 1;});/*If player is disqualified then the opponent is the winner */$(\"#player1 .dq\").click(() => {    var isTrue = findArray(\"disqualified\", \"player1\");    if (isTrue === false) {        console.log(\"player1 was disqualified: \" + $(\".video-current-time\").text());        addArray(stringTimeConverter($(\".video-current-time\").text()), \"player1\", \"disqualified\", \"none\");        $idStartEnd.playerOne.disqualified = true;        $idStartEnd.playerTwo.winner = true;    }});/*$arr must not have any entry for submission in order to add one */$(\"#player1 .sub\").click(() => {    var isTrue = findArray(\"submission\", \"player1\");    var isTrue2 = findArray(\"submission\", \"player2\");    if (isTrue === false && isTrue2 === false) {        console.log(\"player1 won by submission: \" + $(\".video-current-time\").text());        addArray(stringTimeConverter($(\".video-current-time\").text()), \"player1\", \"submission\", \"none\");        $idStartEnd.playerOne.winner = true;    }});$(\"#player2 .fourBtn\").click(() => {    console.log(\"player2 scored 4: \" + $(\".video-current-time\").text());    addArray(stringTimeConverter($(\".video-current-time\").text()), \"player2\", \"scored\", \"4\");    $idStartEnd.playerTwo.points += 4;});$(\"#player2 .threeBtn\").click(() => {    console.log(\"player2 scored 3: \" + $(\".video-current-time\").text());    addArray(stringTimeConverter($(\".video-current-time\").text()), \"player2\", \"scored\", \"3\");    $idStartEnd.playerTwo.points += 3;});$(\"#player2 .twoBtn\").click(() => {    console.log(\"player2 scored 2: \" + $(\".video-current-time\").text());    addArray(stringTimeConverter($(\".video-current-time\").text()), \"player2\", \"scored\", \"2\");    $idStartEnd.playerTwo.points += 2;});$(\"#player2 .pen\").click(() => {    console.log(\"player2 received penalty: \" + $(\".video-current-time\").text());    addArray(stringTimeConverter($(\".video-current-time\").text()), \"player2\", \"penalty\", \"none\");    $idStartEnd.playerTwo.penalties += 1;});$(\"#player2 .adv\").click(() => {    console.log(\"player2 received adv: \" + $(\".video-current-time\").text());    addArray(stringTimeConverter($(\".video-current-time\").text()), \"player2\", \"adv\", \"none\");    $idStartEnd.playerTwo.advantages += 1;});/*If player is disqualified then the opponent is the winner */$(\"#player2 .dq\").click(() => {    var isTrue = findArray(\"disqualified\", \"player2\");    if (isTrue === false) {        console.log(\"player2 was disqualified: \" + $(\".video-current-time\").text());        addArray(stringTimeConverter($(\".video-current-time\").text()), \"player2\", \"disqualified\", \"none\");        $idStartEnd.playerTwo.disqualified = true;        $idStartEnd.playerOne.winner = true;    }});/*$arr must not have any entry for submission in order to add one */$(\"#player2 .sub\").click(() => {    var isTrue = findArray(\"submission\", \"player2\");    var isTrue2 = findArray(\"submission\", \"player1\");    if (isTrue === false && isTrue2 === false) {        console.log(\"player2 won by submission: \" + $(\".video-current-time\").text());        addArray(stringTimeConverter($(\".video-current-time\").text()), \"player2\", \"submission\", \"none\");        $idStartEnd.playerTwo.winner = true;    }});</script>";
$('#content > flo-video-player').prepend(payload);